---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: fluentd
  namespace: kube-system

# ---
# apiVersion: rbac.authorization.k8s.io/v1beta1
# kind: ClusterRole
# metadata:
#   name: fluentd
#   namespace: kube-system
# rules:
# - apiGroups:
#   - ""
#   resources:
#   - pods
#   - namespaces
#   verbs:
#   - get
#   - list
#   - watch

# ---
# kind: ClusterRoleBinding
# apiVersion: rbac.authorization.k8s.io/v1beta1
# metadata:
#   name: fluentd
# roleRef:
#   kind: ClusterRole
#   name: fluentd
#   apiGroup: rbac.authorization.k8s.io
# subjects:
# - kind: ServiceAccount
#   name: fluentd
#   namespace: kube-system
---

kind: Service
apiVersion: v1
metadata:
  name: fluentd-logging
  namespace: kube-system
spec:
  ports:
    - name: fluentd-tcp
      port: 24224
      protocol: TCP
    - name: fluentd-udp
      port: 24224
      protocol: UDP
  selector:
    k8s-app: fluentd-logging

---
apiVersion: extensions/v1beta1
kind: DaemonSet
metadata:
  name: fluentd
  namespace: kube-system
  labels:
    k8s-app: fluentd-logging
    version: v1
    kubernetes.io/cluster-service: "true"
spec:
  template:
    metadata:
      labels:
        k8s-app: fluentd-logging
        version: v1
        kubernetes.io/cluster-service: "true"
    spec:
      serviceAccount: fluentd
      serviceAccountName: fluentd
      tolerations:
      - key: node-role.kubernetes.io/master
        effect: NoSchedule
      containers:
      - name: fluentd
        image: docker.io/theikkila/es-fluentd:v010
        env:
          - name:  LOGSTASH_HOST
            value: "logstash.kube-system.svc.cluster.local"
          - name:  LOGSTASH_PORT
            value: "4000"
          - name:  LOGSTASH_SCHEME
            value: "http"
          - name:  LOGSTASH_SSL_VERIFY
            value: "false"

        resources:
          limits:
            memory: 200Mi
          requests:
            cpu: 100m
            memory: 200Mi
        volumeMounts:
        - name: varlog
          mountPath: /var/log
        - name: varlibdockercontainers
          mountPath: /var/lib/docker/containers
          readOnly: true
      terminationGracePeriodSeconds: 30
      volumes:
      - name: varlog
        hostPath:
          path: /var/log
      - name: varlibdockercontainers
        hostPath:
          path: /var/lib/docker/containers
